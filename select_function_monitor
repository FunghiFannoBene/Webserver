
FD_ZERO e FD_SET sono macro utilizzate per manipolare i set di file descriptors quando
si lavora con la funzione select():

FD_ZERO(&set) inizializza il set di file descriptors set a zero, ovvero 
lo svuota da tutti i file descriptors, preparandolo per essere popolato con nuovi file descriptors da monitorare.

FD_SET(fd, &set) aggiunge il file descriptor fd al set set, segnalandolo per essere monitorato 
da select() per le operazioni di lettura, scrittura o eccezioni, a seconda del set specificato

La funzione select() monitora multiple file descriptors (sockets, file, ecc.) per vedere se sono "pronti" 
per alcune operazioni
(lettura, scrittura, o presenza di eccezioni). Un file descriptor è considerato "pronto" se:

Per la lettura: ci sono dati disponibili per essere letti, oppure una connessione è stata chiusa, o una richiesta
di connessione è in attesa su una socket passiva.
Per la scrittura: lo spazio nel buffer di scrittura è disponibile, quindi non bloccherebbe l'operazione di scrittura.
Per le eccezioni: si verifica una condizione eccezionale (ad esempio, una connessione TCP ha ricevuto un flag di urgente).
select() usa set di bit (bitmask) per rappresentare i file descriptors in tre categorie: lettura, scrittura, ed eccezioni. 
L'applicazione inizializza questi set con i file descriptors che vuole monitorare e poi chiama select(). Alla sua ritorno, 
select() modifica questi set per riflettere quali file descriptors sono effettivamente "pronti".

select() fa questo controllo senza bloccare il programma in attesa che i file descriptors diventino pronti, permettendo 
di gestire multiple connessioni in modo efficiente in un singolo thread o processo.
